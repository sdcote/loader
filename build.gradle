buildscript {
  repositories {
	  maven {
		  url "https://plugins.gradle.org/m2/"
	  }
  }
}

apply plugin: 'java'
apply plugin: 'maven-publish'
apply plugin: 'jacoco'


defaultTasks 'clean', 'build', 'fatJar', 'publish'
group = 'coyote'
version = '0.9.0-SNAPSHOT'

ext {
	title = 'Coyote Loader Framework'
	provider = 'Coyote Systems'
	mainClass = 'coyote.loader.Loader'
}
jar {
    manifest {
		attributes  'Implementation-Title' : "$title",
		'Provider' : "$provider",
		'Main-Class' : "$mainClass",
		'Implementation-Version' : version
	}
}
task fatJar(type: Jar) {
	manifest {
		attributes  'Implementation-Title' : "$title",
		'Provider' : "$provider",
		'Main-Class' : "$mainClass",
		'Implementation-Version' : version
	}
	baseName = project.name + '-all'
	duplicatesStrategy = DuplicatesStrategy.EXCLUDE
	from {
		configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
	}{
		exclude "META-INF/*.RSA"
	}
	with jar
}

repositories {
	mavenLocal()
	mavenCentral()
	maven {
		url = "https://maven.pkg.github.com/sdcote/packages"
		credentials {
			username = project.findProperty("USERNAME") ?: System.getenv("secrets.ACTIONS_USER")
			password = project.findProperty("TOKEN") ?: System.getenv("secrets.ACTIONS_TOKEN")
		}
	}
}


ext {
	dataFrameVersion = '1.0.5'
	junitVersion = '4.12'
	httpclientVersion = '4.5.3'
}
dependencies {

	// Abstract Data Type
	implementation "coyote:dataframe:$dataFrameVersion"
	
	// UnitTesting
	testImplementation "junit:junit:$junitVersion"
	testImplementation "org.apache.httpcomponents:httpclient:$httpclientVersion"
	testImplementation "org.apache.httpcomponents:httpmime:$httpclientVersion"

}



// custom tasks for creating source/javadoc jars
task sourcesJar(type: Jar, dependsOn: classes) {
	classifier = 'sources'
	from sourceSets.main.allSource
}


task javadocJar(type: Jar, dependsOn: javadoc) {
	classifier = 'javadoc'
	from javadoc.destinationDir
}


// add javadoc/source jar tasks as artifacts
artifacts {
	archives sourcesJar, javadocJar
}


publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java

			artifact sourcesJar {
				classifier "sources"
			}

			artifact javadocJar {
				classifier "javadoc"
			}
		}
	}
	
	repositories {
		mavenLocal()
		maven {
			url = "https://maven.pkg.github.com/sdcote/packages"
			credentials {
				username = project.findProperty("USERNAME") ?: System.getenv("secrets.ACTIONS_USER")
				password = project.findProperty("TOKEN") ?: System.getenv("secrets.ACTIONS_TOKEN")
			}
		}
	}
}

jacocoTestReport {
   	reports {
       	xml.enabled = true
        html.enabled = true
   	}
}
check.dependsOn jacocoTestReport

